export const regex = {
  timeOffset: /^[+-][0-9]{2}:[0-9]{2}$/,
  timeOffsetInSeconds: /^[-+]?[0-9]$/,
  year: /^(19|[2-9][0-9])\d{2}$/,
  numberOnly: /^[0-9]+$/,
  phoneNumberWithHyphen: /^[0+]?[1-9]{1}([0-9][- ]?){6,19}$/,
  numberWithTwoDecimal: /^\d{0,7}(\.\d{1,2})?$/,
  negativeNumberWithTwoDecimal: /^[-]?\d{0,7}(\.\d{1,2})?$/,
  wingspanLimit: /^\d{0,3}(\.\d{1,2})?$/,
  threeDigitsLimit: /^[\d]{1,3}$/,
  airportFrequency: /^\d{0,3}(\.\d{1,3})?$/,
  zoneDst: /^[+-][0-9]{2}:[0-9]{2}$/,
  conditionValue: /^(?![0-9]*$)[a-zA-Z0-9 ]+$/,
  icaoList: /^([a-zA-Z0-9]{4}(,|\s|,\s)?)*([a-zA-Z0-9]{4})+$/,
  excelFileOnly: /(\.xlsx)$/,
  alphabetsWithSpaces: /^[a-zA-Z ]*$/,
  alphabetsWithSpacesAndDot: /^[a-zA-Z .]*$/,
  alphabetsWithTenCharacter: /^[a-zA-Z]{0,10}$/,
  alphabetsWithDot: /^[a-zA-Z.]*$/,
  alphabetsWithoutSpaces: /^[a-zA-Z]*$/,
  cityAlternateList: /^([a-zA-Z0-9 ][,]?)*([a-zA-Z0-9 ])+$/,
  latLong: /^([-]?([0-9]*)[.])?([0-9]*)+$/,
  alphaNumericWithHyphen: /^[ a-zA-Z0-9-]*$/,
  statecode: /^[a-zA-Z]{2}-[a-zA-Z0-9]+$/,
  islandCode: /^([a-zA-Z]{2}-[a-zA-Z]{2})(-[0-9]{2})?$/,
  alphaNumeric: /^[ a-zA-Z0-9]*$/,
  alphaNumericWithCommaSpace: /^[a-zA-Z0-9\s,]*$/,
  numeric: /^(?!0+$)[0-9]{1,10}$/,
  populationRange: /^(?!0+$)[0-9]{1,15}$/,
  upperCase: /^[ A-Z ]*$/,
  all: /^(?!\s*$).+/,
  /* eslint-disable */
  rifmFormatter: /\./,
  dateInputMask: [/\d/, /\d/, '-', /\w/, /\w/, /\w/, '-', /\d/, /\d/],
  dateInputMaskARFF: [/\d/, /\d/, '-', /\d/, /\d/, /\d/, /\d/],
  cronExpression: /^(\*|([0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])|\*\/([0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])) (\*|([0-9]|1[0-9]|2[0-3])|\*\/([0-9]|1[0-9]|2[0-3])) (\*|([0-9]|1[0-9]|2[0-3])|\*\/([0-9]|1[0-9]|2[0-3])) (\*|([1-9]|1[0-9]|2[0-9]|3[0-1])|\*\/([1-9]|1[0-9]|2[0-9]|3[0-1])) (\*|([1-9]|1[0-2])|\*\/([1-9]|1[0-2])) (\*|([0-6])|\*\/([0-6]))$/,
  divisbleByFive: /\d*[05]$/,
  stripedHTML: /<[^>]+>/g,
  negativeNumber: /^-?(?!0+$)\d*\d+$/,
  email: /^(?!.{100})([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})$/i,
  alphaNumericWithUnderscore: /^(?![0-9]*$)[a-zA-Z0-9_]+$/,
  extractTextBetweenHandlebar: /[^{}]+(?=})/g,
  alphaNumericWithoutSpaces: /^[a-zA-Z0-9]*$/,
  numbersWithEmpty: /^[0-9]*$/,
  decimalOnly: /^\d{0,15}(\.\d{1,2})?$/,
  commaSeperatedNumber: /^(\d+)*(,\d+)*$/,
  runwayIdFormat: /^(([0-9]|[1-2][0-9]|0[1-9]|3[0-6])[a-zA-Z]{1}[/]([0-9]|[1-2][0-9]|0[1-9]|3[0-6])[a-zA-Z]{1}|[/]\d{2}|([a-zA-Z]{2}[/][a-zA-Z]{2})|([0-9]|[1-2][0-9]|0[1-9]|3[0-6])[\/\-]([0-9]|[1-2][0-9]|0[1-9]|3[0-6])|([a-zA-Z]{1}[/][a-zA-Z]{1})|[a-zA-Z]{1}[1-9])$/,
  testFrequencies: /^((([1-9]{1})([0-9]{0,1}))(,([1-9]([0-9]{0,1})))*){0,1}$/,
  stayHotelsAllowed: /^([^,]{0,100})(,([^,]{1,100}))*$/,
  domesticMeasureRestrictedActivities: /^([^,]{0,50})(,([^,]{1,50}))*$/,
  softwareVersion: /(^(?!0{1,2}.0{1,2}.0{1,2}$)(?!0{1,2}.0{1,2}$)(?!0+$)((\d){1,2})(\.((\d){1,2})){0,2}$)/,
  maxFlightLevel: /^[\d]{3}$/,
  firAirwaysFormat: /^([a-zA-Z]{4}[(][a-zA-Z0-9]{2,9}[)])+$/,
  minMaxFlightLevelInCountry: /^(?:(-[1-9]\d{0,5})|[1-9]\d{0,4}|0)$/,
  phoneNumber: /^\+[1-9]{1}[0-9]{10,15}$/,
  phoneNumberWithSpaceAndDash: /^\+?[0-9]{1,4}([ -]?[0-9]){9,29}$/,
  onePlaceDecimal: /^(?!0+$)\d{0,15}(\.(?!0{1})\d{1})?$/,
  onePlaceDecimalWithZero: /^([-]?\d{0,15})(\.?[0-9]{1})?$/,
  alphabetWithOptionalHandlebars: /^(({{[a-zA-Z0-9]+}})?|[\]\w!@#$&?%^*©®™℠|=`~():;\-[\\`.'+,\/\"\r\n\s])*$/,
  sendgridTemplateId: /^([a-zA-Z0-9]){1}(-){1}([a-zA-Z0-9]){20,50}$/,
  urlV2: /^(https?:\/\/)?(www\.)?([a-zA-Z0-9-]+\.)+[a-zA-Z]{2,6}(\/[^\s]*)?$/,
  url: /(https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|www\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9]+\.[^\s]{2,}|www\.[a-zA-Z0-9]+\.[^\s]{2,})/,
  embeddedLink: /^(http(s)?:\/\/)[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$/,
  latitude: /^-?((9[0])|[1-8]?[0-9](\.\d\d?\d?\d?\d?\d?\d?\d?\d?\d?)?)$/,
  longitude: /^-?((1[01-7][0-9]|[1-9]?[0-9])(\.\d\d?\d?\d?\d?\d?\d?\d?\d?\d?)?|180)$/,
  airframeEngines: /^(([a-zA-Z0-9 .-]{1,75}))(,([a-zA-Z0-9 .-]{0,75})){0,7}$/,
  lowerCaseGroupName: /^(?![.]*$)[a-z0-9.]+$/,
  optionalOnePlaceDecimal: /^\d{0,15}(\.(?!0{1})\d{1})?$/,
  daysHoursMinsInputMask: [/\d/, /\d/, ':', /\d/, /\d/, /\d/, ':', /\d/, /\d/],
  daysHoursMins: /^[0-9]{2}:[0-9]{3}:[0-5][0-9]$/,
  stringWithSlash: /^[a-zA-Z0-9\s\/]+$/,
  fullName: /^[a-zA-Z'-]+( ['a-zA-Z]+)*$/,
  cronExpression_uvGOSetting: /(^((\*\/)?([0-5]?[0-9])((\,|\-|\/)([0-5]?[0-9]))*|\*)\s+((\*\/)?((2[0-3]|1[0-9]|[0-9]|00))((\,|\-|\/)(2[0-3]|1[0-9]|[0-9]|00))*|\*)\s+((\*\/)?([1-9]|[12][0-9]|3[01])((\,|\-|\/)([1-9]|[12][0-9]|3[01]))*|\*)\s+((\*\/)?([1-9]|1[0-2])((\,|\-|\/)([1-9]|1[0-2]))*|\*|)\s+((\*\/)?[0-6]((\,|\-|\/)[0-6])*|\*|00|)\s*$)/,
  alphaNumericWithUnderscore_Hyphen: /^(?![0-9]*$)[a-zA-Z0-9_-]+$/,
  alphaNumericWithUnderscore_Hyphen_Space: /^(?![0-9]*$)[a-zA-Z0-9 _-]+$/,
  alphaNumericsWithDot: /^[a-zA-Z0-9.]*$/,
  latLongMinute: /^0*(?:[0-5]?[0-9])?$/,
  latLongSecond: /^0*(?:[0-5]?[0-9])(\.?[\d]{1,4})?$/,
  alphabetsWithUnderscore: /^[a-zA-Z_]*$/,
  lowerCaseWithUnderscore: /^[a-z_]*$/,
  alphaNumericNumberOnly: /^(?=.*[a-zA-Z])(?=.*[0-9])|^[0-9]+$/,
  startsWithAlphaNumericCharacters: /^[\d\w]+/,
  alphabetWithSlash: /^[a-zA-Z\s\/]+$/,
  alphabetWithHyphen: /^[ a-zA-Z-]*$/,
};
